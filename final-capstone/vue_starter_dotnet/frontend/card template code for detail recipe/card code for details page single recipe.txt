<div id="app">
    <transition name="fade">
        <div class="loader-overlay" v-if="loading">
            <div class="loader"></div>
            <h2>Fetching movie data</h2>
        </div>
    </transition>
    <transition name="slide-fade" appear="appear">
        <div class="movie" id="movie-card" v-if="!loading">
            <movie-data :movie="movie" :error="error"></movie-data><input class="movie__search" id="movie-search" type="text" placeholder="Enter a movie title" @keyup.enter="searchHandler" /></div>
    </transition>
</div><template id="tpl-movie-data" v-if="!loading"><div class="movie__data"><div class="movie__poster" v-if="!error"><span class="movie__poster--fill"><transition name="fade"><img :src="movie.Poster" @load="imgLoaded" v-show="showImg"/></transition></span><span class="movie__poster--featured"><transition name="fade"><img :src="movie.Poster" @load="imgLoaded" v-show="showImg"/></transition></span></div><div class="movie__details" v-if="!error"><h2 class="movie__title">{{movie.Title}}</h2><ul class="movie__tags list--inline"><li class="movie__rated">{{movie.Rated}}</li><li class="movie__year">{{movie.Year}}</li><li class="movie__genre">{{movie.Genre}}</li></ul><p class="movie__plot">{{movie.Plot}}</p><div class="movie__credits"><p><strong>Written by:</strong> {{movie.Writer}}</p><p><strong>Directed by:</strong> {{movie.Director}}</p><p><strong>Starring:</strong></p><ul class="movie__actors list--inline"><li v-for="actor in movie.Actors">{{actor}}</li></ul></div></div><div class="movie__error" v-show="error"><h2>{{movie.Error}}</h2></div></div></template>






@import url('https://fonts.googleapis.com/css?family=Lato:400,900');
 * {
	 box-sizing: border-box;
}
 #app {
	 display: flex;
	 align-items: center;
	 justify-content: center;
	 padding: 12px;
	 min-height: 100vh;
	 font-family: 'Lato', sans-serif;
	 background-color: whitesmoke;
}
 h1, h2, p, ul {
	 line-height: 1.2;
}
 h1:not(:last-child), h2:not(:last-child), p:not(:last-child), ul:not(:last-child) {
	 margin-bottom: 12px;
}
 p, li {
	 font-size: 0.9em;
	 line-height: 1.5;
}
 p + ul {
	 margin-top: -10px;
}
 h1, h2, strong {
	 font-weight: 900;
}
 input {
	 padding: 6px;
	 font-family: 'Lato', sans-serif;
	 font-size: 16px;
	 border: 1px solid gainsboro;
	 border-radius: 2px;
	 -webkit-appearance: none;
}
 .list--inline li {
	 display: inline-block;
}
 .list--inline li:not(:last-child) {
	 margin-right: 12px;
}
 .movie {
	 position: relative;
	 overflow: hidden;
	 margin: 12px auto;
	 width: 100%;
	 max-width: 800px;
	 background-color: white;
	 border-radius: 0.8em;
	 box-shadow: rgba(0, 0, 0, 0.2) 0 30px 18px -24px;
}
 .movie__data {
	 position: relative;
	 display: flex;
	 flex-direction: column;
	 justify-content: center;
	 min-height: 400px;
}
 @media (min-width: 600px) {
	 .movie__data {
		 flex-direction: row;
	}
}
 .movie__search {
	 position: absolute;
	 top: 24px;
	 right: 24px;
	 margin: auto;
	 width: calc(100% - (12px * 4));
}
 @media (min-width: 400px) {
	 .movie__search {
		 max-width: 200px;
	}
}
 .movie__tags {
	 font-size: 0.75em;
	 color: darkgray;
}
 .movie__poster {
	 position: relative;
	 display: flex;
	 width: 100%;
	 transform: translateZ(0);
}
 @media (min-width: 600px) {
	 .movie__poster {
		 margin-right: 12px;
		 width: 200px;
	}
}
 .movie__poster--fill {
	 position: absolute;
	 overflow: hidden;
	 top: -80%;
	 bottom: -20%;
	 left: -20%;
	 width: 150%;
	 height: 150%;
	 background-color: gainsboro;
	 transform: rotate(5deg);
}
 @media (min-width: 600px) {
	 .movie__poster--fill {
		 top: -20%;
		 width: 100%;
	}
}
 .movie__poster--fill img {
	 filter: blur(6px);
	 object-fit: cover;
	 width: 100%;
	 height: 100%;
	 transform: scale(1.4);
}
 .movie__poster--featured {
	 position: relative;
	 display: block;
	 align-self: center;
	 margin-top: 84px;
	 margin-left: 24px;
	 width: 140px;
	 background-color: lightgray;
	 border-radius: 2px;
	 z-index: 1;
}
 @media (min-width: 600px) {
	 .movie__poster--featured {
		 left: 56px;
		 margin: auto;
	}
}
 .movie__poster--featured img {
	 display: block;
	 width: 100%;
	 box-shadow: rgba(0, 0, 0, 0.6) 0 6px 12px -6px;
}
 .movie__poster--featured img[src="N/A"] {
	 min-height: 206px;
	 opacity: 0;
}
 .movie__details {
	 flex: 1;
	 padding: 24px;
}
 @media (min-width: 600px) {
	 .movie__details {
		 padding: 72px;
	}
}
 .movie__title {
	 font-family: 'Lato', sans-serif;
	 font-size: 2em;
}
 .movie__error {
	 align-self: center;
	 justify-self: center;
	 width: 100%;
	 text-align: center;
}
 .loader-overlay {
	 display: flex;
	 flex-direction: column;
	 align-items: center;
	 justify-content: center;
	 position: absolute;
	 top: 0;
	 right: 0;
	 bottom: 0;
	 left: 0;
	 margin: auto;
	 width: 100%;
	 height: 100%;
	 text-align: center;
	 background-color: white;
	 z-index: 100;
}
 .loader-overlay * + * {
	 margin-top: 6px;
}
 .loader {
	 position: relative;
	 border-radius: 100%;
	 width: 32px;
	 height: 32px;
}
 .loader:before, .loader:after {
	 content: "";
	 box-sizing: border-box;
	 display: block;
	 position: absolute;
	 top: 0;
	 left: 0;
	 height: 100%;
	 width: 100%;
	 border-width: 4px;
	 border-radius: 100%;
	 border-style: solid;
}
 .loader:before {
	 border-color: inherit;
	 opacity: 0.2;
}
 .loader:after {
	 border-bottom-color: transparent;
	 border-left-color: inherit;
	 border-right-color: transparent;
	 border-top-color: transparent;
	 transform: translateZ(0);
	 animation: spin 2s infinite cubic-bezier(0.175, 0.885, 0.32, 1.275);
}
 @keyframes spin {
	 0% {
		 transform: rotate(0deg);
	}
	 100% {
		 transform: rotate(1080deg);
	}
}
 .fade-enter-active, .fade-leave-active {
	 transition: opacity 0.4s;
}
 .fade-enter, .fade-leave-to {
	 opacity: 0;
}
 .slide-fade-enter-active, .slide-fade-leave-active {
	 transition: opacity 0.4s, transform 0.4s;
}
 .slide-fade-enter, .slide-fade-leave-to {
	 opacity: 0;
	 transform: translateY(12px);
}
 






 const key = '2fb7569a';
const defaultTitle = 'stargate';
const url = `https://www.omdbapi.com/?apikey=${key}&t=`;

Vue.component('movie-data', {
  props: ['movie', 'error'],
  template: '#tpl-movie-data',
  
  data: function() {
    return {
      showImg: false
    }
  },
    
  methods: {
    imgLoaded: function() {
      this.showImg = true;
    }
  }
});

var app = new Vue({
  el: '#app',
  
  data: {
    movie: {},
    loading: true,
    error: false
  },
  
  methods: {
    findMovie: function(title) {
      this.error = false;
      this.loading = true;
      
      fetch(url + title).then(res => res.json()).then(data => {
          this.movie = data;
          if (this.movie.Actors) this.movie.Actors = data.Actors.split(', ');
          if (this.movie.Error) this.error = true;
          this.loading = false;
      }).catch(err => {
        this.error = true;
        this.loading = false;
      });
    },
    
    searchHandler: function(e) {
      if (e.target.value) {
        this.findMovie(e.target.value);
        e.target.blur();
      }
    },
  },
  
  mounted() {
    this.findMovie(defaultTitle);
  },
})